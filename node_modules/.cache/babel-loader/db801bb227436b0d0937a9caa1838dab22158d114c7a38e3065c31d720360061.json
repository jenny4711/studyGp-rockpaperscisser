{"ast":null,"code":"var _jsxFileName = \"/Users/jiylee/Desktop/Code/reactStudyGroup/rockpaperscissor/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Box from './component/Box';\nimport { choice } from './utils/choice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userSelect, setUserSelect] = useState(null);\n  const [computerSelect, setComputerSelect] = useState(null);\n  const [result, setResult] = useState(\"\");\n  const play = userChoice => {\n    setUserSelect(choice[userChoice]);\n    let computerChoice = randomChoice();\n    setComputerSelect(computerChoice);\n    let finalResult = judgement(choice[userChoice], computerChoice);\n    setResult(finalResult);\n  };\n  const judgement = (user, computer) => {\n    let userChoice = user.name;\n    let computerChoice = computer.name;\n    if (userChoice === computerChoice) return 'TIE';else if (userChoice === 'rock') return computerChoice === 'scissor' ? 'win' : 'lose';else if (userChoice === 'scissor') return computerChoice === 'paper' ? 'win' : 'lose';else if (userChoice === 'paper') return computerChoice === 'rock' ? 'win' : 'lose';\n  };\n  const randomChoice = () => {\n    let itemArray = Object.keys(choice); //객체의 키값만 뽑아서 array 로 만들어주는 함수이다.\n\n    let randomItem = Math.floor(Math.random() * itemArray.length);\n    let final = itemArray[randomItem];\n    return choice[final];\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        user: 'You',\n        result: result,\n        item: userSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        user: 'Computer',\n        result: result,\n        item: computerSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"scissor\"),\n        children: \"\\uAC00\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"rock\"),\n        children: \"\\uBC14\\uC704\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => play(\"paper\"),\n        children: \"\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"OAk4HrUR57y25BKOHBE7oAj3ImA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Box","choice","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userSelect","setUserSelect","computerSelect","setComputerSelect","result","setResult","play","userChoice","computerChoice","randomChoice","finalResult","judgement","user","computer","name","itemArray","Object","keys","randomItem","Math","floor","random","length","final","children","className","item","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jiylee/Desktop/Code/reactStudyGroup/rockpaperscissor/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Box from './component/Box';\nimport { choice } from './utils/choice';\nfunction App() {\n  const [userSelect,setUserSelect]=useState(null)\n  const [computerSelect,setComputerSelect]=useState(null)\n  const [result,setResult]=useState(\"\")\n const play=(userChoice)=>{\n  setUserSelect(choice[userChoice])\nlet computerChoice=randomChoice()\nsetComputerSelect(computerChoice)\nlet finalResult=judgement(choice[userChoice],computerChoice)\nsetResult(finalResult)\n  \n };\n const judgement=(user,computer)=>{\n  let userChoice=user.name\n  let computerChoice=computer.name\nif(userChoice === computerChoice)return 'TIE'\nelse if(userChoice === 'rock')return computerChoice === 'scissor'?'win':'lose'\nelse if(userChoice === 'scissor')return computerChoice ==='paper'?'win':'lose'\nelse if(userChoice ==='paper')return computerChoice === 'rock'?'win':'lose'\n }\nconst randomChoice=()=>{\n  let itemArray = Object.keys(choice) //객체의 키값만 뽑아서 array 로 만들어주는 함수이다.\n\n  let randomItem=Math.floor(Math.random()*itemArray.length);\n  let final = itemArray[randomItem]\n  \n  return choice[final]\n}\n  \n  return (\n    <>\n    <div className=\"main\">\n      <Box user={'You'} result={result} item={userSelect}/>\n      <Box user={'Computer'} result={result} item={computerSelect}/>\n    </div>\n    <div className='Btns' >\n      <button onClick={()=>play(\"scissor\")}>가위</button>\n      <button onClick={()=>play(\"rock\")}>바위</button>\n      <button onClick={()=>play(\"paper\")}>보</button>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}